# automatically generated by the FlatBuffers compiler, do not modify

# namespace: gen_events

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PluginTerminatingEvent(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PluginTerminatingEvent()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPluginTerminatingEvent(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PluginTerminatingEvent
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PluginTerminatingEvent
    def EventCreateTs(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PluginTerminatingEvent
    def PluginName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PluginTerminatingEvent
    def PluginUuid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def PluginTerminatingEventStart(builder): builder.StartObject(3)
def Start(builder):
    return PluginTerminatingEventStart(builder)
def PluginTerminatingEventAddEventCreateTs(builder, eventCreateTs): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(eventCreateTs), 0)
def AddEventCreateTs(builder, eventCreateTs):
    return PluginTerminatingEventAddEventCreateTs(builder, eventCreateTs)
def PluginTerminatingEventAddPluginName(builder, pluginName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(pluginName), 0)
def AddPluginName(builder, pluginName):
    return PluginTerminatingEventAddPluginName(builder, pluginName)
def PluginTerminatingEventAddPluginUuid(builder, pluginUuid): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(pluginUuid), 0)
def AddPluginUuid(builder, pluginUuid):
    return PluginTerminatingEventAddPluginUuid(builder, pluginUuid)
def PluginTerminatingEventEnd(builder): return builder.EndObject()
def End(builder):
    return PluginTerminatingEventEnd(builder)